---
interface Props {
  title: string;
  items: Array<{
    text: string;
    href: string;
    sortOrder: number;
  }>;
  currentPath: string;
}

const { title, items, currentPath } = Astro.props;
---

<details class="group" open>
  <summary class="flex items-center justify-between cursor-pointer group">
    <span class="text-gray-900 font-medium">{title}</span>
    <svg class="w-4 h-4 text-gray-500 transform rotate-90 transition-transform duration-200 group-open:rotate-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </summary>
  <div class="relative overflow-hidden">
    <div class="absolute left-0 top-0 bottom-0 w-0.5 bg-gray-200 transition-opacity duration-200 group-open:opacity-100 opacity-0"></div>
    <ul class="pl-4 mt-2 space-y-2 transition-all duration-200 transform origin-top">
      {items.map(item => (
        <li>
          <a 
            href={item.href} 
            class={`block px-2 py-1 rounded-md transition-colors duration-200 ${currentPath === item.href ? 'bg-indigo-50 text-indigo-700 font-semibold' : 'text-gray-600 hover:text-gray-900'}`}
          >
            {item.text}
          </a>
        </li>
      ))}
    </ul>
  </div>
</details> 